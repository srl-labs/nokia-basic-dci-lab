name: dci

topology:
  kinds:
    nokia_sros:
      image: registry.srlinux.dev/pub/vr-sros:23.10.R1
      type: sr-1s
      license: /opt/nokia/sros/r23_license.key
    nokia_srlinux:
      image: ghcr.io/nokia/srlinux:23.10.1
      type: ixrd3
  nodes:
    ############## CORE ##############
    # p1:
    #   kind: nokia_sros
    #   startup-config: configs/p1.partial.cfg

    ############## DC 1 ##############
    dcgw1-dc1:
      kind: nokia_sros
      startup-config: configs/dcgw1-dc1.partial.cfg

    dcgw2-dc1:
      kind: nokia_sros
      startup-config: configs/dcgw2-dc1.partial.cfg

    spine1-dc1:
      kind: nokia_srlinux
      startup-config: configs/spine1-dc1.cfg

    spine2-dc1:
      kind: nokia_srlinux
      startup-config: configs/spine2-dc1.cfg

    leaf1-dc1:
      kind: nokia_srlinux
      startup-config: configs/leaf1-dc1.cfg

    leaf2-dc1:
      kind: nokia_srlinux
      startup-config: configs/leaf2-dc1.cfg

    leaf3-dc1:
      kind: nokia_srlinux
      startup-config: configs/leaf3-dc1.cfg

    leaf4-dc1:
      kind: nokia_srlinux
      startup-config: configs/leaf4-dc1.cfg

    client1-dc1:
      kind: linux
      image: ghcr.io/hellt/network-multitool
      binds:
        - configs/client.sh:/client.sh
      exec:
        - bash -c "/client.sh dc1 1"

    client2-dc1:
      kind: linux
      image: ghcr.io/hellt/network-multitool
      binds:
        - configs/client.sh:/client.sh
      exec:
        - bash -c "/client.sh dc1 1"

    ############## DC 2 ##############
    # dcgw1-dc2:
    #   kind: nokia_sros
    #   startup-config: configs/dcgw1-dc2.partial.cfg
    #   stages:
    #     create:
    #       wait-for:
    #         - node: dcgw1-dc1
    #           stage: healthy
    #         - node: dcgw2-dc1
    #           stage: healthy

    # dcgw2-dc2:
    #   kind: nokia_sros
    #   startup-config: configs/dcgw2-dc2.partial.cfg
    #   stages:
    #     create:
    #       wait-for:
    #         - node: dcgw1-dc1
    #           stage: healthy
    #         - node: dcgw2-dc1
    #           stage: healthy

    # spine1-dc2:
    #   kind: nokia_srlinux
    #   startup-config: configs/spine1-dc2.cfg

    # spine2-dc2:
    #   kind: nokia_srlinux
    #   startup-config: configs/spine2-dc2.cfg

    # leaf1-dc2:
    #   kind: nokia_srlinux
    #   startup-config: configs/leaf1-dc2.cfg

    # leaf2-dc2:
    #   kind: nokia_srlinux
    #   startup-config: configs/leaf2-dc2.cfg

    # leaf3-dc2:
    #   kind: nokia_srlinux
    #   startup-config: configs/leaf3-dc2.cfg

    # leaf4-dc2:
    #   kind: nokia_srlinux
    #   startup-config: configs/leaf4-dc2.cfg

    # client3-dc2:
    #   kind: linux
    #   image: ghcr.io/hellt/network-multitool
    #   binds:
    #     - configs/client.sh:/client.sh
    # exec:
    #   - ash -c "/client.sh dc2 1"
    # client4-dc2:
    #   kind: linux
    #   image: ghcr.io/hellt/network-multitool
    #   binds:
    #     - configs/client.sh:/client.sh
    # exec:
    #   - ash -c "/client.sh dc2 1"

  links:
    ############## DC 1 ##############
    ## DCGW - CORE
    # - endpoints: ["dcgw1-dc1:eth1", "p1:eth5"]
    # - endpoints: ["dcgw2-dc1:eth1", "p1:eth6"]
    ## DCGW - Spine
    - endpoints: ["spine1-dc1:e1-31", "dcgw1-dc1:eth3"]
    - endpoints: ["spine1-dc1:e1-32", "dcgw2-dc1:eth3"]
    - endpoints: ["spine2-dc1:e1-31", "dcgw1-dc1:eth2"]
    - endpoints: ["spine2-dc1:e1-32", "dcgw2-dc1:eth2"]
    ## Spine 1 - Leafs
    - endpoints: ["spine1-dc1:e1-3", "leaf1-dc1:e1-31"]
    - endpoints: ["spine1-dc1:e1-4", "leaf2-dc1:e1-31"]
    - endpoints: ["spine1-dc1:e1-5", "leaf3-dc1:e1-31"]
    - endpoints: ["spine1-dc1:e1-6", "leaf4-dc1:e1-31"]
    ## Spine 2 - Leafs
    - endpoints: ["spine2-dc1:e1-3", "leaf1-dc1:e1-32"]
    - endpoints: ["spine2-dc1:e1-4", "leaf2-dc1:e1-32"]
    - endpoints: ["spine2-dc1:e1-5", "leaf3-dc1:e1-32"]
    - endpoints: ["spine2-dc1:e1-6", "leaf4-dc1:e1-32"]
    ## Clients - Leafs
    - endpoints: ["client1-dc1:eth1", "leaf1-dc1:e1-1"]
    - endpoints: ["client2-dc1:eth1", "leaf4-dc1:e1-1"]

    ############## DC 2 ##############
    ## DCGW - CORE
    # - endpoints: ["dcgw1-dc2:eth1", "p1:eth1"]
    # - endpoints: ["dcgw2-dc2:eth1", "p1:eth2"]
    ## DCGW - Spine
    # - endpoints: ["spine1-dc2:e1-31", "dcgw1-dc2:eth3"]
    # - endpoints: ["spine1-dc2:e1-32", "dcgw2-dc2:eth3"]
    # - endpoints: ["spine2-dc2:e1-31", "dcgw1-dc2:eth2"]
    # - endpoints: ["spine2-dc2:e1-32", "dcgw2-dc2:eth2"]
    ## Spine 1 - Leafs
    # - endpoints: ["spine1-dc2:e1-3", "leaf1-dc2:e1-31"]
    # - endpoints: ["spine1-dc2:e1-4", "leaf2-dc2:e1-31"]
    # - endpoints: ["spine1-dc2:e1-5", "leaf3-dc2:e1-31"]
    # - endpoints: ["spine1-dc2:e1-6", "leaf4-dc2:e1-31"]
    ## Spine 2 - Leafs
    # - endpoints: ["spine2-dc2:e1-3", "leaf1-dc2:e1-32"]
    # - endpoints: ["spine2-dc2:e1-4", "leaf2-dc2:e1-32"]
    # - endpoints: ["spine2-dc2:e1-5", "leaf3-dc2:e1-32"]
    # - endpoints: ["spine2-dc2:e1-6", "leaf4-dc2:e1-32"]
    ## Clients - Leafs
    # - endpoints: ["client3-dc2:eth1", "leaf1-dc2:e1-1"]
    # - endpoints: ["client4-dc2:eth1", "leaf4-dc2:e1-1"]
